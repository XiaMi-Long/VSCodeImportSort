{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://es6-import-sort/./src/common/index.ts","webpack://es6-import-sort/./src/extension.ts","webpack://es6-import-sort/external commonjs \"vscode\"","webpack://es6-import-sort/external node-commonjs \"os\"","webpack://es6-import-sort/webpack/bootstrap","webpack://es6-import-sort/webpack/startup"],"sourcesContent":["import os from 'os'\nclass ImportSort {\n    private static importRegex: RegExp = /import\\s+[\\s\\S]+?\\s+from\\s+['\"][^'\"]+['\"]\\s*;?\\r?\\n?/g\n\n    private static commonRegex: RegExp = /\\r?\\n/g\n    private static regex: any = null\n\n    private static regexType: 'import' | 'common' | '' = ''\n\n    private static imports: string[] = []\n\n    private static result: string[] = []\n\n    constructor() {}\n\n    static clean() {\n        ImportSort.imports = []\n        ImportSort.result = []\n        ImportSort.regex = null\n        ImportSort.regexType = ''\n        return ImportSort\n    }\n\n    static setImportRegex() {\n        ImportSort.regex = ImportSort.importRegex\n        ImportSort.regexType = 'import'\n        return ImportSort\n    }\n\n    static setCommonRegex() {\n        ImportSort.regex = ImportSort.commonRegex\n        ImportSort.regexType = 'common'\n        return ImportSort\n    }\n\n    /**\n     * 分割单词\n     * @param words\n     * @returns\n     */\n    static splitWords(words: string) {\n        let imports = null\n        switch (ImportSort.regexType) {\n            case 'common':\n                imports = words.split(ImportSort.regex)\n                imports = imports\n                    .filter((item) => item.length > 0)\n                    .map((item) => {\n                        return item + '\\r\\n'\n                    })\n                break\n            case 'import':\n                imports = words.match(ImportSort.regex)?.map((item) => {\n                    const lastLengthStr = item[item.length - 1]\n                    return lastLengthStr === '\\n' || lastLengthStr === '\\r' ? item : item + os.EOL\n                })\n                break\n        }\n\n        if (imports) {\n            ImportSort.imports = imports\n        }\n        console.log(JSON.stringify(os.EOL))\n\n        return ImportSort\n    }\n\n    /**\n     * 降序\n     * @returns\n     */\n    static descendSort() {\n        ImportSort.result = [...ImportSort.imports].sort((a, b) => {\n            return [...b].length - [...a].length\n        })\n\n        return ImportSort\n    }\n\n    /**\n     * 升序\n     * @returns\n     */\n    static ascendSort() {\n        ImportSort.result = [...ImportSort.imports].sort((a, b) => {\n            return [...a].length - [...b].length\n        })\n\n        return ImportSort\n    }\n\n    static getResult() {\n        return ImportSort.result.join('')\n    }\n}\n\nexport { ImportSort }\n","import * as vscode from 'vscode'\nimport { ImportSort } from './common'\n\nexport function activate(context: vscode.ExtensionContext) {\n    const importDesc = vscode.commands.registerCommand('import-sort.desc-sort-import', () => {\n        const editor = vscode.window.activeTextEditor\n        if (editor) {\n            const selection = editor.selection\n            const selectedText = editor.document.getText(selection)\n            const sort = ImportSort.clean().setImportRegex().splitWords(selectedText).descendSort().getResult()\n            editor.edit((editBuilder) => {\n                editBuilder.replace(selection, sort) // 替换选中的文本\n            })\n        }\n    })\n\n    const importAsc = vscode.commands.registerCommand('import-sort.asc-sort-import', () => {\n        const editor = vscode.window.activeTextEditor\n        if (editor) {\n            const selection = editor.selection\n            const selectedText = editor.document.getText(selection)\n            const sort = ImportSort.clean().setImportRegex().splitWords(selectedText).ascendSort().getResult()\n            editor.edit((editBuilder) => {\n                editBuilder.replace(selection, sort) // 替换选中的文本\n            })\n        }\n    })\n\n    const commonDesc = vscode.commands.registerCommand('import-sort.desc-sort-common', () => {\n        const editor = vscode.window.activeTextEditor\n        if (editor) {\n            const selection = editor.selection\n            const selectedText = editor.document.getText(selection)\n            const sort = ImportSort.clean().setCommonRegex().splitWords(selectedText).descendSort().getResult()\n            editor.edit((editBuilder) => {\n                editBuilder.replace(selection, sort) // 替换选中的文本\n            })\n        }\n    })\n\n    const commonAsc = vscode.commands.registerCommand('import-sort.asc-sort-common', () => {\n        const editor = vscode.window.activeTextEditor\n        if (editor) {\n            const selection = editor.selection\n            const selectedText = editor.document.getText(selection)\n            const sort = ImportSort.clean().setCommonRegex().splitWords(selectedText).ascendSort().getResult()\n            editor.edit((editBuilder) => {\n                editBuilder.replace(selection, sort) // 替换选中的文本\n            })\n        }\n    })\n\n    context.subscriptions.push(importDesc)\n    context.subscriptions.push(importAsc)\n    context.subscriptions.push(commonDesc)\n    context.subscriptions.push(commonAsc)\n}\n\nexport function deactivate() {}\n","module.exports = require(\"vscode\");","module.exports = require(\"os\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(265);\n"],"names":["ImportSort","static","constructor","clean","imports","result","regex","regexType","setImportRegex","importRegex","setCommonRegex","commonRegex","splitWords","words","split","filter","item","length","map","match","lastLengthStr","EOL","console","log","JSON","stringify","descendSort","sort","a","b","ascendSort","getResult","join","context","importDesc","vscode","commands","registerCommand","editor","window","activeTextEditor","selection","selectedText","document","getText","edit","editBuilder","replace","importAsc","commonDesc","commonAsc","subscriptions","push","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call"],"sourceRoot":""}